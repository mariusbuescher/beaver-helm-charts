apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "staytus.fullname" . }}
  labels:
    app: {{ template "staytus.name" . }}
    chart: {{ template "staytus.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "staytus.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "staytus.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          {{- if .Values.mariadb.replication.enabled }}
            - name: DB_HOST
              value: "{{ template "staytus.fullname" . }}-mariadb-master"
          {{- else }}
            - name: DB_HOST
              value: "{{ template "staytus.fullname" . }}-mariadb"
          {{- end }}
            - name: DB_DATABASE
              value: {{ .Values.mariadb.db.name | quote }}
            - name: DB_USER
              value: {{ .Values.mariadb.db.user | quote }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "staytus.fullname" . }}-mariadb
                  key: mariadb-password
          {{- if .Values.smtp.enabled }}
            - name: STAYTUS_SMTP_HOSTNAME
              value: {{ .Values.smtp.host | quote }}
            - name: STAYTUS_SMTP_USERNAME
              value: {{ .Values.smtp.user | quote }}
            - name: STAYTUS_SMTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "staytus.fullname" . }}
                  key: smtp-password
          {{- end }}
          {{- if .Values.config }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
          {{- end}}
          ports:
            - name: http
              containerPort: 8787
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 60
            periodSeconds: 15
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- if .Values.config }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ .Values.config }}
    {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
